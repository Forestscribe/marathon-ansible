- vars:
    influxdb_conf_path: "/etc/influxdb/influxdb.conf"
    influxdb_conf_url: "{{ zk_http_url }}/{{ influxdb_conf_path }}"

  block:
    - name: upload influxdb conf in zk
      znode:
        hosts: "{{ zk_host }}"
        name: "{{ influxdb_conf_path }}"
        value: "{{ lookup('file', 'influxdb/influxdb.conf') }}"
        state: present

    - name: Deploy metrics
      marathon:
        marathon_uri: "{{ marathon_uri }}"
        group_id: core/metrics
        group_json:
            dependencies:
                - /core/lb
            apps:
            -   id: collectd
                cmd:
                cpus: 0.5
                mem: 64
                disk: 0
                instances: "{{marathon_num_agents}}"
                constraints:
                - [ "hostname", "UNIQUE" ]
                container:
                  type: DOCKER
                  volumes:
                  - containerPath: "/var/run/docker.sock"
                    hostPath: "/var/run/docker.sock"
                    mode: RW
                  docker:
                    image:  "bobrik/collectd-docker"
                    network: BRIDGE
                    privileged: true
                    parameters: []
                    forcePullImage: false
                env:
                    GRAPHITE_HOST: "{{ docker_ip }}"
                    GRAPHITE_PORT: "{{ servicePorts['graphite'] }}"
                    APP_ENV_KEY: MARATHON_APP_ID
                    TASK_ENV_KEY: MESOS_TASK_ID
                    COLLECTD_HOST: MESOS
                upgradeStrategy:
                    minimumHealthCapacity: 0.5
                    maximumOverCapacity: 0

            -   id: "grafana"
                cmd:
                cpus: 1
                mem: 1024
                disk: 0
                instances: 1
                container:
                  type: DOCKER
                  volumes:
                  - containerPath: "grafana"
                    mode: "RW"
                    persistent:
                     type: "root"
                     size: 1000
                  - containerPath: "/var/lib/grafana"
                    hostPath: "grafana"
                    mode: "RW"
                  docker:
                    image:  "grafana/grafana"
                    network: BRIDGE
                    privileged: false
                    parameters: []
                    forcePullImage: false
                    portMappings:
                    - containerPort: 3000
                      servicePort: "{{ servicePorts['grafana'] }}"
                      protocol: tcp
                labels:
                  HAPROXY_GROUP: external
                  HAPROXY_BIND_ADDR: 172.17.0.1
                  subdomain: '/grafana/'
                  upstream_name: 'grafana'
                env:
                    GF_SERVER_ROOT_URL: "{{ nginx_external_url }}/grafana/"
                    GF_SERVER_DOMAIN: "{{ nginx_external_url | host_from_url }}"
                    GF_SERVER_ENFORCE_DOMAIN: "true"
                    GF_SECURITY_ADMIN_PASSWORD: "{{ zk.secrets.grafana_admin_passwd }}"
                residency:
                    taskLostBehavior: "WAIT_FOREVER"
                upgradeStrategy:
                    minimumHealthCapacity: 0.5
                    maximumOverCapacity: 0
                healthChecks:
                - "{{ basic_http_health_check }}"

            -   id: "influxdb"
                cmd: influxd -config /mnt/mesos/sandbox/influxdb.conf
                cpus: 4
                mem: 2048
                disk: 0
                instances: 1
                container:
                  type: DOCKER
                  volumes:
                  - containerPath: "influxdata"
                    mode: "RW"
                    persistent:
                     type: "root"
                     size: 10000
                  - containerPath: "/var/lib/influxdb"
                    hostPath: "influxdata"
                    mode: "RW"
                  docker:
                    image:  "influxdb:alpine"
                    network: BRIDGE
                    privileged: false
                    parameters: []
                    forcePullImage: false
                    portMappings:
                    - containerPort: 8086
                      protocol: tcp
                      servicePort: "{{ servicePorts['influxdb'] }}"
                    - containerPort: 2003
                      protocol: tcp
                      servicePort: "{{ servicePorts['graphite'] }}"
                    - containerPort: 8083
                      servicePort: "{{ servicePorts['influxdb_admin'] }}"
                      protocol: tcp

                healthChecks:
                -   path: /query?q=show%20stats
                    protocol: HTTP
                    portIndex: 0
                    gracePeriodSeconds: 300
                    intervalSeconds: 60
                    timeoutSeconds: 20
                    maxConsecutiveFailures: 3
                    ignoreHttp1xx: false

                labels:
                  HAPROXY_GROUP: external
                  HAPROXY_BIND_ADDR: 172.17.0.1

                uris:
                    - "{{ influxdb_conf_url }}"

                residency:
                    taskLostBehavior: "WAIT_FOREVER"
                upgradeStrategy:
                    minimumHealthCapacity: 0.5
                    maximumOverCapacity: 0
